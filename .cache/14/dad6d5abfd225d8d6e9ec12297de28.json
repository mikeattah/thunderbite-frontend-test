{"id":"index.html","dependencies":[{"name":"./favicon.ico","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\favicon.ico","parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"./tween.umd.js","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\tween.umd.js","parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"./index.css","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.css","parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"./index.html","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html","entry":true,"parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"./wheel.html","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\wheel.html","entry":true,"parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"./index.js","dynamic":true,"resolved":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.js","parent":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\index.html"},{"name":"C:\\Users\\Enemona\\Projects\\thunderbite-frontend-test\\package.json","includedInParent":true,"mtime":1644227067427}],"generated":{"html":"<!DOCTYPE html>\r\n<html class=\"hydrated\" lang=\"en-US\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\r\n    <meta name=\"HandheldFriendly\" content=\"true\">\r\n    <meta name=\"MobileOptimized\" content=\"width\">\r\n\r\n    <title>Thunderbite Frontend Test | Showdown</title>\r\n\r\n    <!-- Favicon -->\r\n    <link rel=\"icon\" type=\"image/png\" sizes=\"48x48\" href=\"/8af3a74ede48e250ceb935c026242483.ico\">\r\n\r\n    <!-- PixiJS -->\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/5.3.10/pixi.min.js\" integrity=\"sha512-q934XBdvzPUGro9tUco1Z5dMohM/lg1T1lem+XXigGYbgYEZwwoLgWff2H7XZkruXrZ8KSzVUoxNDkIf1Rbb/A==\" crossorigin=\"anonymous\"></script>\r\n\r\n    <!-- PixiPlugin -->\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/PixiPlugin.min.js\" integrity=\"sha512-sSYM7MQVTmI4X9VmroJBmkixnxxX6TFRKfzXgFg7PXWz7VeYwGgEeqK7cVRZPFw30sjH3aZOhiwLv6ObJpoWRg==\" crossorigin=\"anonymous\"></script>\r\n\r\n    <!-- TweenMax -->\r\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js\"></script>\r\n\r\n    <!-- Tween.js -->\r\n    <script src=\"/55904aedcdeb3cda01bfadbba6f8e772.js\"></script>\r\n\r\n    <!-- Google Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin=\"\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400&family=Roboto:wght@400&family=Montserrat:wght@400&display=swap\" rel=\"stylesheet\">\r\n\r\n    <!-- Custom Styles -->\r\n    <link rel=\"stylesheet\" href=\"/bca1542f88ef8253c16b452e9ad09f98.css\">\r\n  </head>\r\n  <body>\r\n    <header>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <a href=\"/eacf331f0ffc35d4b482f1d15a887d3b.html\"><span>Showdown</span></a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/819ad2ca7e28ca5cae64270f4849523f.html\"><span>Wheel</span></a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n    <main id=\"app\"></main>\r\n    <footer>\r\n      <p>\r\n        Built by\r\n        <a href=\"https://github.com/mikeattah/thunderbite-frontend-test\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Mike Attah</a>\r\n        for\r\n        <a href=\"https://thunderbite.com\" target=\"_blank\" rel=\"noopener noreferrer\">Thunderbite</a>\r\n      </p>\r\n    </footer>\r\n    <script>// width and height allocated to element containing the app in the DOM\nvar winWidth = window.innerWidth;\nvar winHeight = window.innerHeight * 0.901; // Create element to attach app to DOM\n\nvar appContainer = document.querySelector(\"#app\"); // Aliases\n\nvar Application = PIXI.Application,\n    Container = PIXI.Container,\n    ParticleContainer = PIXI.ParticleContainer,\n    Loader = PIXI.Loader.shared,\n    Resources = PIXI.Loader.shared.resources,\n    TextureCache = PIXI.utils.TextureCache,\n    Sprite = PIXI.Sprite,\n    Rectangle = PIXI.Rectangle; // Create the application helper\n\nvar app = new Application({\n  width: winWidth,\n  height: winHeight,\n  backgroundColor: 1117219,\n  resolution: window.devicePixelRatio,\n  autoDensity: true\n}); // Make the app view responsive to window resizing\n\nwindow.addEventListener(\"resize\", function () {\n  app.renderer.resize(window.innerWidth, window.innerHeight * 0.901);\n}); // Add the app to the DOM\n\nappContainer.appendChild(app.view); // load tileset JSON file and run the `setup` function when it's done\n\nLoader.add(\"frontend-test/showdown/showdown-tileset.json\").load(setup); // Create container\n\nvar showdownContainer = new Container(); // Define variables that might be used in more than one function\n\nvar id, boltOff, bolt, d, h, header, mustDrop, n, o1, o2, s, showdownOff, slots, vegas, w1, w2, showdownSprites; // Define the `setup` function\n\nfunction setup() {\n  // Create an alias for all the texture atlas frames\n  id = Resources[\"frontend-test/showdown/showdown-tileset.json\"].textures; // Create the header sprite\n\n  header = new Sprite(id[\"header.png\"]);\n  header.x = app.screen.width / 2;\n  header.y = app.screen.height / 2;\n  header.anchor.set(0.5); // Create the showdown-off sprite\n\n  showdownOff = new Sprite(id[\"showdown-off.png\"]);\n  showdownOff.x = app.screen.width / 2;\n  showdownOff.y = app.screen.height / 2;\n  showdownOff.anchor.set(0.5);\n  showdownOff.scale.set(1.5, 1.5); // Create the vegas sprite\n\n  vegas = new Sprite(id[\"vegas@2x.png\"]);\n  vegas.scale.set(0.75, 0.75);\n  vegas.anchor.set(0.5);\n  vegas.position.set(app.screen.width / 2 - vegas.width / 2.25, app.screen.height / 2 - vegas.height / 1.15);\n  vegas.alpha = 0; // Create the slots sprite\n\n  slots = new Sprite(id[\"slots@2x.png\"]);\n  slots.scale.set(0.75, 0.75);\n  slots.anchor.set(0.5);\n  slots.position.set(app.screen.width / 2 + slots.width / 1.65, app.screen.height / 2 - slots.height / 1.15);\n  slots.alpha = 0; // Create the bolt sprite\n\n  bolt = new Sprite(id[\"bolt@2x.png\"]);\n  bolt.scale.set(0.75, 0.75);\n  bolt.anchor.set(0.5);\n  bolt.position.set(app.screen.width / 2 + bolt.width / 7, app.screen.height / 2 - bolt.height / 1.5);\n  bolt.alpha = 0; // Create the showdown bright letters sprites\n\n  s = new Sprite(id[\"s@2x.png\"]);\n  s.scale.set(0.75, 0.75);\n  s.anchor.set(0.5);\n  s.position.set(app.screen.width / 2 - s.width / 0.7, app.screen.height / 2 + s.height / 11);\n  s.alpha = 0;\n  h = new Sprite(id[\"h@2x.png\"]);\n  h.scale.set(0.75, 0.75);\n  h.anchor.set(0.5);\n  h.position.set(app.screen.width / 2 - h.width / 1.05, app.screen.height / 2 + h.height / 11);\n  h.alpha = 0;\n  o1 = new Sprite(id[\"o-1@2x.png\"]);\n  o1.scale.set(0.75, 0.75);\n  o1.anchor.set(0.5);\n  o1.position.set(app.screen.width / 2 - o1.width / 0.6, app.screen.height / 2 + o1.height / 11);\n  o1.alpha = 0;\n  w1 = new Sprite(id[\"w-1@2x.png\"]);\n  w1.scale.set(0.75, 0.75);\n  w1.anchor.set(0.5);\n  w1.position.set(app.screen.width / 2 - w1.width / 4, app.screen.height / 2 + w1.height / 14.5);\n  w1.alpha = 0;\n  d = new Sprite(id[\"d@2x.png\"]);\n  d.scale.set(0.75, 0.75);\n  d.anchor.set(0.5);\n  d.position.set(app.screen.width / 2 + d.width / 3.75, app.screen.height / 2 + d.height / 19);\n  d.alpha = 0;\n  o2 = new Sprite(id[\"o-2@2x.png\"]);\n  o2.scale.set(0.73, 0.73);\n  o2.anchor.set(0.5);\n  o2.position.set(app.screen.width / 2 + o2.width / 1.5, app.screen.height / 2 + o2.height / 19);\n  o2.alpha = 0;\n  w2 = new Sprite(id[\"w-2@2x.png\"]);\n  w2.scale.set(0.75, 0.75);\n  w2.anchor.set(0.5);\n  w2.position.set(app.screen.width / 2 + w2.width / 0.97, app.screen.height / 2 + w2.height / 11);\n  w2.alpha = 0;\n  n = new Sprite(id[\"n@2x.png\"]);\n  n.scale.set(0.73, 0.73);\n  n.anchor.set(0.5);\n  n.position.set(app.screen.width / 2 + n.width / 0.73, app.screen.height / 2 + n.height / 11);\n  n.alpha = 0; // Create array of showdown sprites\n\n  showdownSprites = [s, h, o1, w1, d, o2, w2, n]; // Create the \"must drop\" sprite\n\n  mustDrop = new Sprite(id[\"must_drop.png\"]);\n  mustDrop.anchor.set(0.5);\n  mustDrop.position.set(app.screen.width / 2, app.screen.height / 2 + mustDrop.height / 1.35);\n  mustDrop.alpha = 0; // Add sprites to container\n\n  showdownContainer.addChild(header);\n  showdownContainer.addChild(showdownOff);\n  showdownContainer.addChild(vegas);\n  showdownContainer.addChild(slots);\n  showdownContainer.addChild(bolt);\n  showdownSprites.forEach(function (sprite) {\n    return showdownContainer.addChild(sprite);\n  });\n  showdownContainer.addChild(mustDrop); // Add container to the stage\n\n  app.stage.addChild(showdownContainer);\n\n  function animate() {\n    // Show vegas and slots sprites\n    TweenMax.to([vegas, slots], 0.1, {\n      alpha: 1\n    }).delay(1);\n    TweenMax.to([vegas, slots], 0.1, {\n      alpha: 0\n    }).delay(1.5);\n    TweenMax.to([vegas, slots], 0.1, {\n      alpha: 1\n    }).delay(1.6);\n    TweenMax.to([vegas, slots], 0.1, {\n      alpha: 0\n    }).delay(1.7);\n    TweenMax.to([vegas, slots], 0.1, {\n      alpha: 1\n    }).delay(1.8); // Show bolt sprite\n\n    TweenMax.to(bolt, 0.5, {\n      alpha: 1\n    }).delay(3); // flickering effect on bolt sprite\n\n    app.ticker.add(function () {\n      setTimeout(function () {\n        bolt.alpha = randomInt(0, 1) + 0.1;\n      }, 3000);\n    }); // Show showdown sprites\n\n    TweenMax.to(s, 0.25, {\n      alpha: 1\n    }).delay(2.5);\n    TweenMax.to(h, 0.25, {\n      alpha: 1\n    }).delay(2.75);\n    TweenMax.to(o1, 0.25, {\n      alpha: 1\n    }).delay(3);\n    TweenMax.to(w1, 0.25, {\n      alpha: 1\n    }).delay(3.25);\n    TweenMax.to(d, 0.25, {\n      alpha: 1\n    }).delay(3.5);\n    TweenMax.to(o2, 0.25, {\n      alpha: 1\n    }).delay(3.75);\n    TweenMax.to(w2, 0.25, {\n      alpha: 1\n    }).delay(4);\n    TweenMax.to(n, 0.25, {\n      alpha: 1\n    }).delay(4.25); // Show \"must drop\" sprite\n\n    TweenMax.to(mustDrop, 0.1, {\n      alpha: 1\n    }).delay(5);\n    TweenMax.to(mustDrop, 0.1, {\n      alpha: 0\n    }).delay(5.5);\n    TweenMax.to(mustDrop, 0.1, {\n      alpha: 1\n    }).delay(5.6);\n    TweenMax.to(mustDrop, 0.1, {\n      alpha: 0\n    }).delay(5.7);\n    TweenMax.to(mustDrop, 0.1, {\n      alpha: 1\n    }).delay(5.8);\n  }\n\n  animate();\n} //The `randomInt` helper function\n\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}</script>\r\n    <script src=\"/168726dbe96b3ce427e7fedce31bb0bc.js\"></script>\r\n  </body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"59f7a809f83f9fe7360f3ecd99e036d6","cacheData":{"env":{}}}